#!/bin/sh

CC="cc $1 -fPIC -I. -Os -g0 -fomit-frame-pointer -fno-exceptions -fno-unwind-tables -fno-asynchronous-unwind-tables -ffunction-sections -c"
AR="ar -rc libOfront.a"

## Ofront+

$CC SYSTEM.c Heap.c Platform.c Console.c Kernel.c CmdArgs.c Strings.c Files.c Math.c MathL.c Reals.c Modules.c Texts.c Oberon.c
if [ $? != 0 ]; then exit 1; fi
$AR SYSTEM.o Heap.o Platform.o Console.o Kernel.o CmdArgs.o Strings.o Files.o Math.o MathL.o Reals.o Modules.o Texts.o Oberon.o

## Eco

$CC ecoBigSets.c ecoBuffer.c ecoListen.c ecoLists.c ecoParser.c ecoVector.c
if [ $? != 0 ]; then exit 1; fi
$AR ecoBigSets.o ecoBuffer.o ecoListen.o ecoLists.o ecoParser.o ecoVector.o

## ETH Oberon

$CC Zlib.c ZlibBuffers.c ZlibDeflate.c ZlibInflate.c ZlibReaders.c ZlibWriters.c Zip.c
if [ $? != 0 ]; then exit 1; fi
$AR Zlib.o ZlibBuffers.o ZlibDeflate.o ZlibInflate.o ZlibReaders.o ZlibWriters.o Zip.o

## OO2C

$CC oo2cAscii.c oo2cConvTypes.c oo2cLongStrings.c oo2cRandomNumbers.c \
  oo2cStrings.c
if [ $? != 0 ]; then exit 1; fi
$AR oo2cAscii.o oo2cConvTypes.o oo2cLongStrings.o oo2cRandomNumbers.o \
  oo2cStrings.o

## POW

$CC powStrings.c
if [ $? != 0 ]; then exit 1; fi
$AR powStrings.o

## Free Oberon

$CC In.c Out.c Graph.c Sound.c Turtle.c -w
if [ $? != 0 ]; then exit 1; fi
$AR In.o Out.o Graph.o Sound.o Turtle.o

## libCurl

$CC NetHttp.c
if [ $? != 0 ]; then exit 1; fi
$AR NetHttp.o

## Aria - Reusable Oberon-2 modules by Stewart Greenhill
## https://github.com/sgreenhill/aria

$CC arArgs.c arChar.c arCString.c arDir.c arSize.c arStrings.c arStringList.c \
  arStringAssoc.c arText.c arStream.c arFile.c arOut.c arPath.c \
  arPattern.c arErr.c arConfiguration.c arValue.c arFormat.c arJSON.c 
if [ $? != 0 ]; then exit 1; fi
$AR arArgs.o arChar.o arCString.o arDir.o arSize.o arStrings.o arStringList.o \
  arStringAssoc.o arText.o arStream.o arFile.o arOut.o arPath.o \
  arPattern.o arErr.o arConfiguration.o arValue.o arFormat.o arJSON.o

## BlackBox

$CC bbKernel.c bbMath.c bbStrings.c
if [ $? != 0 ]; then exit 1; fi
$AR bbKernel.o bbMath.o bbStrings.o

rm *.o 

CC="cc $1 -I. -L. -s -Os -g0 -fvisibility=hidden -fomit-frame-pointer -fno-exceptions -fno-unwind-tables -fno-asynchronous-unwind-tables"

$CC -c OfrontErrors.c OfrontOPM.c OfrontOPS.c OfrontOPT.c OfrontOPB.c OfrontOPP.c OfrontOPC.c OfrontOPV.c
if [ $? != 0 ]; then exit 1; fi

## Ofront+

$CC OfrontCmd.c OfrontErrors.o OfrontOPM.o OfrontOPS.o OfrontOPT.o OfrontOPB.o OfrontOPP.o OfrontOPC.o OfrontOPV.o -lOfront -lm -o../ofront+
if [ $? != 0 ]; then exit 1; fi

## Browser

$CC BrowserCmd.c OfrontErrors.o OfrontOPM.o OfrontOPS.o OfrontOPT.o OfrontOPC.o OfrontOPV.o -lOfront -lm -o../showdef
if [ $? != 0 ]; then exit 1; fi

## ImportGraph

$CC ImportGraph.c -lOfront -lm -o../graphviz
if [ $? != 0 ]; then exit 1; fi

## OCat

$CC OCatCmd.c -lOfront -lm -o../ocat
if [ $? != 0 ]; then exit 1; fi

## OEF & OMake

$CC OEF.c -lOfront -lm -o../oef
if [ $? != 0 ]; then exit 1; fi
$CC OMake.c -lOfront -lm -o../omake
if [ $? != 0 ]; then exit 1; fi

## OdcToText

$CC OdcToText.c -lOfront -lm -o../odc2txt
if [ $? != 0 ]; then exit 1; fi

cd ..
#./ofront+
#if [ $? != 0 ]; then exit 1; fi
